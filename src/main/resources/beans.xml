<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

<!--    <context:component-scan base-package="com.hello"></context:component-scan>-->

    <context:load-time-weaver/>

    <task:annotation-driven executor="defaultTaskExecutor" scheduler="defaultTaskScheduler" />
    <task:executor id="defaultTaskExecutor" pool-size="5" queue-capacity="100"/>
    <task:scheduler id="defaultTaskScheduler" pool-size="1" />

    <!--告诉spring创建对象
        声明bean ， 就是告诉spring要创建某个类的对象
        id:对象的自定义名称，唯一值。 spring通过这个名称找到对象
        class:类的全限定名称（不能是接口，因为spring是反射机制创建对象，必须使用类）

        spring就完成 SomeService someService = new SomeServiceImpl();
        spring是把创建好的对象放入到map中， spring框架有一个map存放对象的。
           springMap.put(id的值， 对象）；
           例如 springMap.put("someService", new SomeServiceImpl());

        一个bean标签声明一个对象。
    -->
    <bean id="father" abstract="true" scope="prototype" init-method="init">
        <property name="name" value="service"></property>
    </bean>

    <bean id="userServiceImpl" class="com.hello.service.impl.UserServiceImpl" parent="father"/>

    <!--方式一-->

<!--    <bean id="lifecycleProcessor" class = "com.hello.utils.Process"/>-->

    <!--
       spring能创建一个非自定义类的对象吗， 创建一个存在的某个类的对象。
    -->
<!--    <bean id="mydate" class="java.util.Date" />-->

</beans>
<!--
   spring的配置文件
   1.beans : 是根标签，spring把java对象成为bean。
   2.spring-beans.xsd 是约束文件，和mybatis指定  dtd是一样的。
-->